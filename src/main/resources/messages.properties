# Seci\u00f3n 8 Manejo de Mensajes e Internacionalizaci\u00f3n con Spring ----------------

#B\u00e1sicamente lo que haremos en est\u00e1 lecci\u00f3n es que en lugar de escribir 
#directamente cada una de las etiquetas por ejemplo en el caso del heder
#que dice "Control Clientes", o en los links como "Craar Persons" o los nombres
#que hemos colocado en la tabla, cada una de estas etiquetas o cadenas en lugar
#de que las pongamos directamente en la p\u00e1gina html las vamos a escribir y las 
#vamos a obtener desde un archivo de propiedades, este es el manejo de mensajes
#cuando trabajamos con Spring.
#Posteriormente esto nos va a servir en otra lecci\u00f3n para manejar diferentes
#idiomas ya uqe vamos a poder externalizar cada una de est\u00e1s etiquetas, cada
#uno de estos mensajes y por lo tanto vamos a poder utilizar varios lenguajes
#al maneja diferentes achivos de propiedades, uno por cada lenguaje que deseemos
#utilizar.
#De momento lo que haemos ser\u00e1 modificar dada una des estas etiquetas para en
#lugar de que las escribamos directamente en la p\u00e1gina html las vamos a extraer
#desde un archivo de propiedades.
#Para esto lo que vamos a hacer es ir a nuestra carpeta de other sources y en
#la carpeta de resources vamos a agregar este archivo de propiedades llamado 
#menssajes. Al hacer clic derecho en el paquete default y no aparece la
#opci\u00f3n de Properties File, habr\u00e1 que dar en other y en la barra de busqueda
#escribir properties, luego nos aparecera una carpetita de esa ventana con other
#damos clic y nos aparecera para crear un archivo de Properties File, lo
#selecionamos y le colocamos el nombre de "messages". Con este nombre ser\u00e1
#por default pero si lo queremos cambiar de otro nombre habr\u00e1 que hacer una
#configuraci\u00f3n extra, pero manejaremos esta configuraci\u00f3n por default.

#Ahora agregaremos cada una de las etiquetas que hemos colocado en nuestras 
#plantillas.

# Cada vez que hagamos cambios tenemos que reiniciar el servidor. Y posiblemente
# hacer tambi\u00e9n Clean and Build.

# Mendajes en las etiquetas HTML para cualquier texto est\u00e1tico -----------------

plantilla.titulo = Control Clientes
plantilla.pie-pagina = Derechos Reservados.

# Aqu\u00ed obviamente podemos manejar cualquier valor por ejemplo podr\u00eda ser 
# simplemente crear pero si tenemos m\u00e1s elementos en nuestra p\u00e1gina y tenemos
# m\u00e1s complejidad entonces es recomendable indicar poner un prefijo para
# saber a que corresponde est\u00e1 acci\u00f3n de crear. As\u00ed que lo relacionamos con
# el Objeto de Persona.


persona.nombre = Nombre
persona.apellido = Apellido
persona.email = Email
persona.telefono = Tel\u00e9fono
persona.lista-vacia = La lista listaPersonas est\u00e1 vac\u00eda.
persona.formulario = Datos de la Persona.

accion.agregar = Agregar una nueva persona
accion.editar = Editar
accion.eliminar = Eliminar

accion.guardar = Guardar
accion.regresar = Regresar

# Mensajes en las validaciones de los campos del formulario --------------------

#Tambi\u00e9n podemos personalizar los mensajes de validaci\u00f3n que hemos agregado
#a nuestra p\u00e1gina en el formulario de nuestra aplicaci\u00f3n (cuando nos de un 
#error al ingresar los datos, para que se muestren en nuestro idioma o en otros
#correctamente).
#Para poder modificar esos mensajes asociados a las validaciones hay que ir al
#paquete de domain en nuestra Clase de Persona

# Podemos utilizar los textos de @NotEmpty y posteriormente asociar el campo
# que queremos modificar, pero lo m\u00e1s importante es manejar el texto de @NotEmpty
# o el de @Email, as\u00ed que estas validaciones tambi\u00e9n las vamos a utilizar para
# definir nuestras llaves/variables en el archivo messages.properties y as\u00ed 
# modificar los mensajes por ejemplo:
#    NotEmpty.persona.nombre = Indicamos el mensaje
# Debe de iniciar de esa forma, con el nombre de la validaci\u00f3n que hemos
# agregado (la validaci\u00f3n que queremos personalizar.
# Y as\u00ed con cada uno de los campos debemos continuar.

NotEmpty.persona.nombre = El campo nombre no puede estar vacio.
NotEmpty.persona.apellido = El campo apellido no puede estar vacio.
NotEmpty.persona.email = El campo email no puede estar vacio.
Email.persona.email = El formato de email no es v\u00e1lido.
# Este ya no lo agregamos pero se puede agregar.
# NotEmpty.persona.telefono = El campo tel\u00e9fono no puede estar vacio.
